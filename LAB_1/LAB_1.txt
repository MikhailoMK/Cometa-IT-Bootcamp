https://github.com/MikhailoMK/Cometa-IT-Bootcamp/tree/main/LAB_1

#1

mkdir lab1 - создаёт папку
touch lab1/file1.txt - создаёт файл
touch lab1/file2.txt - создаёт файл
touch lab1/file3.txt - создаёт файл
(1_1)
chmod 600 lab1/file1.txt - меняет права файла
chmod 660 lab1/file2.txt - меняет права файла
chmod 644 lab1/file3.txt - меняет права файла
sudo groupadd lab_group - создаёт группу
sudo usermod -aG lab_group stan - добавляет пользователя в группу
sudo chown stan:lab_group -R lab1/ - меняет группу для каталога и файлов внутри него
(1_2)

#########################################################################################
#2

mkdir lab2 - создаёт папку
nano lab2/input.txt - редактирует текстовый файл, елси такого не существует, то создаёт
ls -l lab2/ > directory_lixt.txt - записывает содержимое папки lab2 в текстовый файл
date >> directory_lixt.txt - дописывает в текстовый файл дату и время
sort lab2/input.txt - выводит результат отсортированного текстового файла
(2_1)
grep a lab2/input.txt - выводит те строки из файла, в которыйх есть символ 'a'
(2_2)
wc -l lab2/input.txt - выводит количество строк в файле
(2_3)
sort lab2/input.txt | grep e | wc -l - выводит количество строк, содержащих символ 'e' в отсортированном файле
(2_4)
ls non_existent_file 2> errors.txt - перенаправляет ошибку выполнения команды в файл
cat errors.txt - показывает содержимое текстового файла
(2_5)

#########################################################################################
#3

nano script_3_1.sh - редактирует текстовый файл, елси такого не существует, то создаёт
==============================script_3_1.sh==============================================
#!/bin/bash

echo Hello `whoami`!	#Выводит приветсвие того, кто запустит скрипт
=========================================================================================
chmod +x script_3_1.sh - даёт права файлу на его использование(запуск)
./script_3_1.sh - запускает скрипт

mkdir test_dir - создал папку для теста 2-го скрипта
cd test_dir - перешёл в тестовую папку
touch t1.txt - создал файл для теста 2-го скрипта
touch t2.txt - создал файл для теста 2-го скрипта
touch t3.txt - создал файл для теста 2-го скрипта
(3_1)
nano script_3_2.sh - редактирует текстовый файл, елси такого не существует, то создаёт
==============================script_3_2.sh==============================================
#!/bin/bash

dir=`pwd` 			#Задаёт переменной путь к данной директории
chown user1:lab_group -R $dir	#Меняет владельца и группу для каталога и всего его содержимого
chmod 764 -R $dir 		#Меняет права для каталога и всего его содержимого
=========================================================================================
chmod +x script_3_2.sh - даёт права файлу на его использование(запуск)
./script_3_2.sh - запускает скрипт
(3_2)

cd .. - выходим из тестовой папки
nano file1.txt - редактирует текстовый файл, елси такого не существует, то создаёт
nano script_3_3.sh - редактирует текстовый файл, елси такого не существует, то создаёт
==============================script_3_3.sh==============================================
#!/bin/bash

if [ $# -ne 1 ]; then		#Проверяет количество записей после ./script (должна быть 1 запись, т.е. имя файла, если не 1, то ошибка)
  echo ERROR: $0 FILE_NAME	#Выводит ошибку
  exit				#Завершает работу скрипта
fi				#Завершает условный оператор

if [ ! -e $1 ]; then		#Проверяет существует ли файл, который указываем после ./script
  echo ERROR: FILE NOT FOUND	#Выводит ошибку
  exit				#Завершает работу скрипта
fi				#Завершает условный оператор

sort $1 > sorted.txt		#Выводит отсортированный указанный файл, в sorted.txt
=========================================================================================
chmod +x script_3_3.sh - даёт права файлу на его использование(запуск)
./script_3_3.sh - запускает скрипт
(3_3)

nano script_3_4.sh - редактирует текстовый файл, елси такого не существует, то создаёт
==============================script_3_4.sh==============================================
#!/bin/bash

read -p "NUMBER: " num		#Считывает введённое значения и записывает в переменную num. -p нужно для того, чтобы вывести надпись

if [ $num -gt 0 ]; then		#Проверят заданное число больше нуля или нет, если да, то выводит ответ
    echo POSITIVE		#Выводит ответ
elif [ $num -lt 0 ]; then	#Проверят заданное число меньше нуля или нет, если да, то выводит ответ
    echo NEGATIVE		#Выводит ответ
else				#Иначе
    echo ZERO			#Выводит ответ
fi				#Завершает условный оператор
=========================================================================================
chmod +x script_3_4.sh - даёт права файлу на его использование(запуск)
./script_3_4.sh - запускает скрипт
(3_4)

nano script_3_5.sh - редактирует текстовый файл, елси такого не существует, то создаёт
==============================script_3_5.sh==============================================
#!/bin/bash

if [ $# -ne 1 ]; then		#Проверяет количество записей после ./script (должна быть 1 запись, т.е. имя файла, если не 1, то ошибка)
  echo WHERE FILE_NAME?		#Выводит ошибку
  exit				#Завершает работу скрипта
fi				#Завершает условный оператор

if [ ! -e $1 ]; then		#Проверяет существует ли файл, который указываем после ./script
  echo NOT EXIST		#Выводит ошибку
  exit				#Завершает работу скрипта
else				#Иначе
  echo EXIST			#Выводит ответ
fi				#Завершает условный оператор

if [ -d $1 ]; then		#Проверяет является ли файл директорией
  echo DIRECTORY		#Выводит ответ
elif [ -f $1 ]; then		#Проверяет является ли файл просто файлом
  echo FILE			#Выводит ответ
else				#Иначе
  echo OTHER			#Выводит ответ
fi				#Завершает условный оператор

echo `stat -c %A $1`		#Выводит права доступа файла (%A выводит в формате -rwxrwxrwx, если использовать %a, то будет использовать формат 777)

echo `stat -c %s $1`		#Выводит размер файла в байтах
=========================================================================================
chmod +x script_3_5.sh - даёт права файлу на его использование(запуск)
./script_3_5.sh - запускает скрипт
(3_5)

nano script_3_6.sh - редактирует текстовый файл, елси такого не существует, то создаёт
==============================script_3_6.sh==============================================
#!/bin/bash

if [ $# -ne 2 ]; then			#Проверяет правильность Проверяет количество записей после ./script
  echo INCORRECT CONFIGURATION		#Выводит ошибку
  exit					#Завершает работу скрипта
fi					#Завершает условный оператор

if [ ! -e $1 ]; then			#Проверяет существует ли файл, который указываем после ./script
  echo FILE NOT FOUND			#Выводит ошибку
  exit					#Завершает работу скрипта
fi					#Завершает условный оператор		

NAME=$(basename $1 | cut -d '.' -f 1)_$(date +%Y_%m_%d)		#В переменную записываем новое имя с датой, из абсолютного пути к файлу убираем его путь, чтобы осталось только имя, а также убираем расширение

tar -czvf $2/$NAME.tar.gz -C $(dirname $1) $(basename $1)	#Выполняем архивацию с указанием нужного пути и имени. -c нужно для создания архива, -z для сжатия при помощи gzip, -v для того, чтобы видеть какой файл заархивировался, -f для задания имени архиву
=========================================================================================
chmod +x script_3_6.sh - даёт права файлу на его использование(запуск)
./script_3_6.sh - запускает скрипт
(3_6)