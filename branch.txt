git init
Инициализация репозитория в текущей директории.

git remote add origin https://github.com/MikhailoMK/Cometa-IT-Bootcamp
Добавление удаленного репозитория с именем origin.

git pull origin main
Получение последних изменений с ветки main удалённого репозитория origin.

git add branch.txt
Индексация файла для последующего коммита.

git status
Показывает новые или изменённые файлы, которые нужно зафиксировать.

git commit -m "create branch.txt"
Фиксирует проиндексованные изменения и сохраняет их в историю версий.

git push origin main
Загружает все изменения локальной ветки main в удалённый репозиторий.

git checkout -b branch
Создаёт новую ветку branch и переключатеся на неё.

git push origin branch
Загружает все изменения локальной ветки branch в удалённый репозиторий.
=================================================================================================================================================================

Ветки в Git
Ветки в Git представляют собой механизм для управления историей изменений в проекте. При помощи веток можно:
1) Работать изолированно: при создании новой ветки можно работать с ней независимо от изменений в проекте.
2) Экспериментировать: можно создавать ветки для тестирования новых идей, исправления ошибок или добавления новых функций, не влияя на стабильную версию проекта.
3) Параллельно работать: один человек может работать над новыми функциями, а другой — над исправлением ошибок, используя разные ветки.
4) Возвращаться к предыдущим версиям: если что-то пошло не так, то можно вернуться к предыдущему состоянию проекта, переключившись на соответствующую ветку.
5) Управлять релизами: можно создать отдельную ветку для подготовки новой версии приложения, не затрагивая основную ветку разработки.